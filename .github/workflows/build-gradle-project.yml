name: Build project

on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - '**'

env:
  gradle_cmd: ./gradlew --parallel --build-cache
    -PAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    -PAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -Prepository=${{ secrets.PRIVATEMAVENREPO }}

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    permissions:
      issues: read
      pull-requests: write
      contents: read
      checks: write

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 22

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release' }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Start containers
        run: docker compose --profile gh-actions -f docker-compose.yaml up -d

      - name: Run build
        run: ${gradle_cmd} build --scan -x deltaCoverage

      - name: Perform Delta coverage
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF"

      - name: Append Delta Coverage
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        continue-on-error: true
        uses: gw-kit/delta-coverage-plugin/actions/delta-coverage-report@main
        with:
          delta-coverage-report: build/reports/coverage-reports/delta-coverage/report.md

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.15.1
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        continue-on-error: true
        with:
          check_name: 'Unit Tests Report'
          files: '**/build/test-results/*/TEST-*.xml'

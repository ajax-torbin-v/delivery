version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    env_file: .env
    volumes:
      - mongo_db:/data/db
    ports:
      - "27017:27017"
    profiles: [ local ]

  mongo-test:
    image: mongo
    restart: always
    container_name: test_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: test
      MONGO_INITDB_DATABASE: test
    ports:
      - "27018:27017"
    profiles: [ gh-actions ]

  nats:
    image: nats
    container_name: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    restart: unless-stopped
    profiles: [ gh-actions, local ]

  kafka:
    image: confluentinc/confluent-local:7.4.1
    hostname: kafka
    container_name: kafka
    ports:
      - "8082:8082"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
    profiles: [ gh-actions, local ]


  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 9999:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    profiles: [ local ]

  redis:
    image: redis:7.4-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: [ "redis-server", "--protected-mode", "no" ]
    profiles: [ local, gh-actions ]

volumes:
  mongo_db:
